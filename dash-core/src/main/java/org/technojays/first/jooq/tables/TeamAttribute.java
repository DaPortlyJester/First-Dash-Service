/**
 * This class is generated by jOOQ
 */
package org.technojays.first.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.first.jooq.First;
import org.technojays.first.jooq.Keys;
import org.technojays.first.jooq.tables.records.TeamAttributeRecord;


/**
 * Attributes associated with a FIRST team
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamAttribute extends TableImpl<TeamAttributeRecord> {

	private static final long serialVersionUID = 1680904004;

	/**
	 * The reference instance of <code>first.team_attribute</code>
	 */
	public static final TeamAttribute TEAM_ATTRIBUTE = new TeamAttribute();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TeamAttributeRecord> getRecordType() {
		return TeamAttributeRecord.class;
	}

	/**
	 * The column <code>first.team_attribute.id</code>. system id for this attribute
	 */
	public final TableField<TeamAttributeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this attribute");

	/**
	 * The column <code>first.team_attribute.team_id</code>. system id for associated team
	 */
	public final TableField<TeamAttributeRecord, Integer> TEAM_ID = createField("team_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for associated team");

	/**
	 * The column <code>first.team_attribute.attributes</code>. attributes
	 */
	public final TableField<TeamAttributeRecord, Object> ATTRIBUTES = createField("attributes", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "attributes");

	/**
	 * Create a <code>first.team_attribute</code> table reference
	 */
	public TeamAttribute() {
		this("team_attribute", null);
	}

	/**
	 * Create an aliased <code>first.team_attribute</code> table reference
	 */
	public TeamAttribute(String alias) {
		this(alias, TEAM_ATTRIBUTE);
	}

	private TeamAttribute(String alias, Table<TeamAttributeRecord> aliased) {
		this(alias, aliased, null);
	}

	private TeamAttribute(String alias, Table<TeamAttributeRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Attributes associated with a FIRST team");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TeamAttributeRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEAM_ATTRIBUTE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TeamAttributeRecord> getPrimaryKey() {
		return Keys.TEAM_ATTRIBUTES_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TeamAttributeRecord>> getKeys() {
		return Arrays.<UniqueKey<TeamAttributeRecord>>asList(Keys.TEAM_ATTRIBUTES_PK, Keys.TEAM_ATTRIBUTE_UNIQUENESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamAttribute as(String alias) {
		return new TeamAttribute(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TeamAttribute rename(String name) {
		return new TeamAttribute(name, null);
	}
}
