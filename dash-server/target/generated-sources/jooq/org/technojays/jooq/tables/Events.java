/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.jooq.First;
import org.technojays.jooq.Keys;
import org.technojays.jooq.tables.records.EventsRecord;


/**
 * An event describes the timeframe for competitions and celebrations that 
 * are managed together
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Events extends TableImpl<EventsRecord> {

	private static final long serialVersionUID = -1270615251;

	/**
	 * The reference instance of <code>first.events</code>
	 */
	public static final Events EVENTS = new Events();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EventsRecord> getRecordType() {
		return EventsRecord.class;
	}

	/**
	 * The column <code>first.events.id</code>. event system id
	 */
	public final TableField<EventsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "event system id");

	/**
	 * The column <code>first.events.name</code>. display name for event
	 */
	public final TableField<EventsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "display name for event");

	/**
	 * The column <code>first.events.short_name</code>. Short name for event
	 */
	public final TableField<EventsRecord, String[]> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "Short name for event");

	/**
	 * The column <code>first.events.start_date</code>. start date of event
	 */
	public final TableField<EventsRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "start date of event");

	/**
	 * The column <code>first.events.end_date</code>. end date of event
	 */
	public final TableField<EventsRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "end date of event");

	/**
	 * The column <code>first.events.info</code>. event info
	 */
	public final TableField<EventsRecord, Object> INFO = createField("info", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "event info");

	/**
	 * Create a <code>first.events</code> table reference
	 */
	public Events() {
		this("events", null);
	}

	/**
	 * Create an aliased <code>first.events</code> table reference
	 */
	public Events(String alias) {
		this(alias, EVENTS);
	}

	private Events(String alias, Table<EventsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Events(String alias, Table<EventsRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "An event describes the timeframe for competitions and celebrations that are managed together\n");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EventsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_EVENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EventsRecord> getPrimaryKey() {
		return Keys.EVENTS_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EventsRecord>> getKeys() {
		return Arrays.<UniqueKey<EventsRecord>>asList(Keys.EVENTS_PK, Keys.EVENT_SHORT_NAME_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events as(String alias) {
		return new Events(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Events rename(String name) {
		return new Events(name, null);
	}
}
