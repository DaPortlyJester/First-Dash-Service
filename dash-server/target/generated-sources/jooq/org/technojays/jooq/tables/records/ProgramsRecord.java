/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.technojays.jooq.tables.Programs;
import org.technojays.jooq.tables.interfaces.IPrograms;


/**
 * A program is a sub-organization of FIRST that describes the type of games 
 * that will be played and the 
 * types of participants.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "programs", schema = "first")
public class ProgramsRecord extends UpdatableRecordImpl<ProgramsRecord> implements Record5<Integer, String, String[], String[], Object>, IPrograms {

	private static final long serialVersionUID = -996202925;

	/**
	 * Setter for <code>first.programs.id</code>. system id for this program
	 */
	@Override
	public ProgramsRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>first.programs.id</code>. system id for this program
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>first.programs.name</code>. Display name for this program
	 */
	@Override
	public ProgramsRecord setName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>first.programs.name</code>. Display name for this program
	 */
	@Column(name = "name")
	@Override
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>first.programs.short_name</code>. symbolic / abbreviate name used in program searches
	 */
	@Override
	public ProgramsRecord setShortName(String[] value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>first.programs.short_name</code>. symbolic / abbreviate name used in program searches
	 */
	@Column(name = "short_name", unique = true)
	@Override
	public String[] getShortName() {
		return (String[]) getValue(2);
	}

	/**
	 * Setter for <code>first.programs.membership</code>. Student body participation in this program
	 */
	@Override
	public ProgramsRecord setMembership(String[] value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>first.programs.membership</code>. Student body participation in this program
	 */
	@Column(name = "membership")
	@Override
	public String[] getMembership() {
		return (String[]) getValue(3);
	}

	/**
	 * Setter for <code>first.programs.info</code>. Info for this program
	 */
	@Override
	public ProgramsRecord setInfo(Object value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>first.programs.info</code>. Info for this program
	 */
	@Column(name = "info")
	@Override
	public Object getInfo() {
		return (Object) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String[], String[], Object> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String[], String[], Object> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Programs.PROGRAMS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Programs.PROGRAMS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String[]> field3() {
		return Programs.PROGRAMS.SHORT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String[]> field4() {
		return Programs.PROGRAMS.MEMBERSHIP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field5() {
		return Programs.PROGRAMS.INFO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String[] value3() {
		return getShortName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String[] value4() {
		return getMembership();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value5() {
		return getInfo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProgramsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProgramsRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProgramsRecord value3(String[] value) {
		setShortName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProgramsRecord value4(String[] value) {
		setMembership(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProgramsRecord value5(Object value) {
		setInfo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProgramsRecord values(Integer value1, String value2, String[] value3, String[] value4, Object value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPrograms from) {
		setId(from.getId());
		setName(from.getName());
		setShortName(from.getShortName());
		setMembership(from.getMembership());
		setInfo(from.getInfo());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPrograms> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProgramsRecord
	 */
	public ProgramsRecord() {
		super(Programs.PROGRAMS);
	}

	/**
	 * Create a detached, initialised ProgramsRecord
	 */
	public ProgramsRecord(Integer id, String name, String[] shortName, String[] membership, Object info) {
		super(Programs.PROGRAMS);

		setValue(0, id);
		setValue(1, name);
		setValue(2, shortName);
		setValue(3, membership);
		setValue(4, info);
	}
}
