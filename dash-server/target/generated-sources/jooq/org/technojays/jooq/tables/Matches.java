/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.jooq.First;
import org.technojays.jooq.Keys;
import org.technojays.jooq.tables.records.MatchesRecord;


/**
 * Describe a match where teams competed against each other
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Matches extends TableImpl<MatchesRecord> {

	private static final long serialVersionUID = 1373224163;

	/**
	 * The reference instance of <code>first.matches</code>
	 */
	public static final Matches MATCHES = new Matches();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MatchesRecord> getRecordType() {
		return MatchesRecord.class;
	}

	/**
	 * The column <code>first.matches.id</code>. system id for this match
	 */
	public final TableField<MatchesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this match");

	/**
	 * The column <code>first.matches.match_number</code>. match number for the competition
	 */
	public final TableField<MatchesRecord, Integer> MATCH_NUMBER = createField("match_number", org.jooq.impl.SQLDataType.INTEGER, this, "match number for the competition");

	/**
	 * The column <code>first.matches.competition_id</code>. competition system id
	 */
	public final TableField<MatchesRecord, Integer> COMPETITION_ID = createField("competition_id", org.jooq.impl.SQLDataType.INTEGER, this, "competition system id");

	/**
	 * The column <code>first.matches.start_time</code>.  expected match start time
	 */
	public final TableField<MatchesRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, " expected match start time");

	/**
	 * The column <code>first.matches.end_time</code>. expected match end time
	 */
	public final TableField<MatchesRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "expected match end time");

	/**
	 * Create a <code>first.matches</code> table reference
	 */
	public Matches() {
		this("matches", null);
	}

	/**
	 * Create an aliased <code>first.matches</code> table reference
	 */
	public Matches(String alias) {
		this(alias, MATCHES);
	}

	private Matches(String alias, Table<MatchesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Matches(String alias, Table<MatchesRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Describe a match where teams competed against each other\n");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MatchesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MATCHES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MatchesRecord> getPrimaryKey() {
		return Keys.MATCHES_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MatchesRecord>> getKeys() {
		return Arrays.<UniqueKey<MatchesRecord>>asList(Keys.MATCHES_PK, Keys.MATCH_UNIQUENESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Matches as(String alias) {
		return new Matches(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Matches rename(String name) {
		return new Matches(name, null);
	}
}
