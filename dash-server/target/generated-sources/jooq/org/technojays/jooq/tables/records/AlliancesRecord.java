/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.technojays.jooq.tables.Alliances;
import org.technojays.jooq.tables.interfaces.IAlliances;


/**
 * Relationship between a match and a group of allies
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "alliances", schema = "first")
public class AlliancesRecord extends UpdatableRecordImpl<AlliancesRecord> implements Record4<Integer, Integer, Integer, String[]>, IAlliances {

	private static final long serialVersionUID = 2133365313;

	/**
	 * Setter for <code>first.alliances.id</code>. system id for this alliance
	 */
	@Override
	public AlliancesRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>first.alliances.id</code>. system id for this alliance
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>first.alliances.type</code>. type (color) for this alliance
	 */
	@Override
	public AlliancesRecord setType(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>first.alliances.type</code>. type (color) for this alliance
	 */
	@Column(name = "type", precision = 32)
	@Override
	public Integer getType() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>first.alliances.match_id</code>. system id for the associated match
	 */
	@Override
	public AlliancesRecord setMatchId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>first.alliances.match_id</code>. system id for the associated match
	 */
	@Column(name = "match_id", precision = 32)
	@Override
	public Integer getMatchId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>first.alliances.ally_ref</code>. ally->alliance reference for all teams that were a part of this alliance (sha from team numbers)
	 */
	@Override
	public AlliancesRecord setAllyRef(String[] value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>first.alliances.ally_ref</code>. ally->alliance reference for all teams that were a part of this alliance (sha from team numbers)
	 */
	@Column(name = "ally_ref")
	@Override
	public String[] getAllyRef() {
		return (String[]) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, String[]> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, String[]> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Alliances.ALLIANCES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Alliances.ALLIANCES.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Alliances.ALLIANCES.MATCH_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String[]> field4() {
		return Alliances.ALLIANCES.ALLY_REF;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getMatchId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String[] value4() {
		return getAllyRef();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlliancesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlliancesRecord value2(Integer value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlliancesRecord value3(Integer value) {
		setMatchId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlliancesRecord value4(String[] value) {
		setAllyRef(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlliancesRecord values(Integer value1, Integer value2, Integer value3, String[] value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IAlliances from) {
		setId(from.getId());
		setType(from.getType());
		setMatchId(from.getMatchId());
		setAllyRef(from.getAllyRef());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IAlliances> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AlliancesRecord
	 */
	public AlliancesRecord() {
		super(Alliances.ALLIANCES);
	}

	/**
	 * Create a detached, initialised AlliancesRecord
	 */
	public AlliancesRecord(Integer id, Integer type, Integer matchId, String[] allyRef) {
		super(Alliances.ALLIANCES);

		setValue(0, id);
		setValue(1, type);
		setValue(2, matchId);
		setValue(3, allyRef);
	}
}
