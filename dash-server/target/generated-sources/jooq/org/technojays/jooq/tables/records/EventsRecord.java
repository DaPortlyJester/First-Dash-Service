/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.technojays.jooq.tables.Events;
import org.technojays.jooq.tables.interfaces.IEvents;


/**
 * An event describes the timeframe for competitions and celebrations that 
 * are managed together
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "events", schema = "first")
public class EventsRecord extends UpdatableRecordImpl<EventsRecord> implements Record6<Integer, String, String[], Timestamp, Timestamp, Object>, IEvents {

	private static final long serialVersionUID = -1679931042;

	/**
	 * Setter for <code>first.events.id</code>. event system id
	 */
	@Override
	public EventsRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>first.events.id</code>. event system id
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>first.events.name</code>. display name for event
	 */
	@Override
	public EventsRecord setName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>first.events.name</code>. display name for event
	 */
	@Column(name = "name")
	@Override
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>first.events.short_name</code>. Short name for event
	 */
	@Override
	public EventsRecord setShortName(String[] value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>first.events.short_name</code>. Short name for event
	 */
	@Column(name = "short_name", unique = true)
	@Override
	public String[] getShortName() {
		return (String[]) getValue(2);
	}

	/**
	 * Setter for <code>first.events.start_date</code>. start date of event
	 */
	@Override
	public EventsRecord setStartDate(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>first.events.start_date</code>. start date of event
	 */
	@Column(name = "start_date")
	@Override
	public Timestamp getStartDate() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>first.events.end_date</code>. end date of event
	 */
	@Override
	public EventsRecord setEndDate(Timestamp value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>first.events.end_date</code>. end date of event
	 */
	@Column(name = "end_date")
	@Override
	public Timestamp getEndDate() {
		return (Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>first.events.info</code>. event info
	 */
	@Override
	public EventsRecord setInfo(Object value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>first.events.info</code>. event info
	 */
	@Column(name = "info")
	@Override
	public Object getInfo() {
		return (Object) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String[], Timestamp, Timestamp, Object> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String[], Timestamp, Timestamp, Object> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Events.EVENTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Events.EVENTS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String[]> field3() {
		return Events.EVENTS.SHORT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Events.EVENTS.START_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return Events.EVENTS.END_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field6() {
		return Events.EVENTS.INFO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String[] value3() {
		return getShortName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getStartDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getEndDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value6() {
		return getInfo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventsRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventsRecord value3(String[] value) {
		setShortName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventsRecord value4(Timestamp value) {
		setStartDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventsRecord value5(Timestamp value) {
		setEndDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventsRecord value6(Object value) {
		setInfo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventsRecord values(Integer value1, String value2, String[] value3, Timestamp value4, Timestamp value5, Object value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IEvents from) {
		setId(from.getId());
		setName(from.getName());
		setShortName(from.getShortName());
		setStartDate(from.getStartDate());
		setEndDate(from.getEndDate());
		setInfo(from.getInfo());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IEvents> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventsRecord
	 */
	public EventsRecord() {
		super(Events.EVENTS);
	}

	/**
	 * Create a detached, initialised EventsRecord
	 */
	public EventsRecord(Integer id, String name, String[] shortName, Timestamp startDate, Timestamp endDate, Object info) {
		super(Events.EVENTS);

		setValue(0, id);
		setValue(1, name);
		setValue(2, shortName);
		setValue(3, startDate);
		setValue(4, endDate);
		setValue(5, info);
	}
}
