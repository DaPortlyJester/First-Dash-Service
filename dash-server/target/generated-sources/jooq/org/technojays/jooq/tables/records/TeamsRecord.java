/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.technojays.jooq.tables.Teams;
import org.technojays.jooq.tables.interfaces.ITeams;


/**
 * A team associated with a specific FIRST program
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "teams", schema = "first")
public class TeamsRecord extends UpdatableRecordImpl<TeamsRecord> implements Record5<Integer, Integer, Integer, String, String[]>, ITeams {

	private static final long serialVersionUID = 2045463807;

	/**
	 * Setter for <code>first.teams.id</code>. system id forteam
	 */
	@Override
	public TeamsRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>first.teams.id</code>. system id forteam
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>first.teams.program_id</code>. system id for the associated program
	 */
	@Override
	public TeamsRecord setProgramId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>first.teams.program_id</code>. system id for the associated program
	 */
	@Column(name = "program_id", precision = 32)
	@Override
	public Integer getProgramId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>first.teams.number</code>. number for this team
	 */
	@Override
	public TeamsRecord setNumber(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>first.teams.number</code>. number for this team
	 */
	@Column(name = "number", precision = 32)
	@Override
	public Integer getNumber() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>first.teams.name</code>.  name for this team
	 */
	@Override
	public TeamsRecord setName(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>first.teams.name</code>.  name for this team
	 */
	@Column(name = "name")
	@Override
	public String getName() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>first.teams.short_name</code>. short name for this team
	 */
	@Override
	public TeamsRecord setShortName(String[] value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>first.teams.short_name</code>. short name for this team
	 */
	@Column(name = "short_name", unique = true)
	@Override
	public String[] getShortName() {
		return (String[]) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, String, String[]> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, String, String[]> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Teams.TEAMS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Teams.TEAMS.PROGRAM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Teams.TEAMS.NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Teams.TEAMS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String[]> field5() {
		return Teams.TEAMS.SHORT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getProgramId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String[] value5() {
		return getShortName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamsRecord value2(Integer value) {
		setProgramId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamsRecord value3(Integer value) {
		setNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamsRecord value4(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamsRecord value5(String[] value) {
		setShortName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamsRecord values(Integer value1, Integer value2, Integer value3, String value4, String[] value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITeams from) {
		setId(from.getId());
		setProgramId(from.getProgramId());
		setNumber(from.getNumber());
		setName(from.getName());
		setShortName(from.getShortName());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITeams> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TeamsRecord
	 */
	public TeamsRecord() {
		super(Teams.TEAMS);
	}

	/**
	 * Create a detached, initialised TeamsRecord
	 */
	public TeamsRecord(Integer id, Integer programId, Integer number, String name, String[] shortName) {
		super(Teams.TEAMS);

		setValue(0, id);
		setValue(1, programId);
		setValue(2, number);
		setValue(3, name);
		setValue(4, shortName);
	}
}
