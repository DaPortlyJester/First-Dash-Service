/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.technojays.jooq.tables.Awards;
import org.technojays.jooq.tables.interfaces.IAwards;


/**
 * Awards awarded at competitions and events
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "awards", schema = "first", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"type_id", "event_id", "competition_id", "team_id"})
})
public class AwardsRecord extends UpdatableRecordImpl<AwardsRecord> implements Record6<Integer, Integer, Integer, Integer, Integer, Integer>, IAwards {

	private static final long serialVersionUID = 1205111488;

	/**
	 * Setter for <code>first.awards.id</code>. system id for this award
	 */
	@Override
	public AwardsRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>first.awards.id</code>. system id for this award
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>first.awards.type_id</code>. system id for the type of this award
	 */
	@Override
	public AwardsRecord setTypeId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>first.awards.type_id</code>. system id for the type of this award
	 */
	@Column(name = "type_id", precision = 32)
	@Override
	public Integer getTypeId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>first.awards.event_id</code>. system id for the associated event
	 */
	@Override
	public AwardsRecord setEventId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>first.awards.event_id</code>. system id for the associated event
	 */
	@Column(name = "event_id", precision = 32)
	@Override
	public Integer getEventId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>first.awards.competition_id</code>. system id for the competition this award is assocaited with
	 */
	@Override
	public AwardsRecord setCompetitionId(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>first.awards.competition_id</code>. system id for the competition this award is assocaited with
	 */
	@Column(name = "competition_id", precision = 32)
	@Override
	public Integer getCompetitionId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>first.awards.team_id</code>. system id for the team this award is associated with
	 */
	@Override
	public AwardsRecord setTeamId(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>first.awards.team_id</code>. system id for the team this award is associated with
	 */
	@Column(name = "team_id", precision = 32)
	@Override
	public Integer getTeamId() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>first.awards.awardee_id</code>. system id for the awardee of this award
	 */
	@Override
	public AwardsRecord setAwardeeId(Integer value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>first.awards.awardee_id</code>. system id for the awardee of this award
	 */
	@Column(name = "awardee_id", precision = 32)
	@Override
	public Integer getAwardeeId() {
		return (Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Awards.AWARDS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Awards.AWARDS.TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Awards.AWARDS.EVENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Awards.AWARDS.COMPETITION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Awards.AWARDS.TEAM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Awards.AWARDS.AWARDEE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getEventId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCompetitionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getTeamId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getAwardeeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AwardsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AwardsRecord value2(Integer value) {
		setTypeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AwardsRecord value3(Integer value) {
		setEventId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AwardsRecord value4(Integer value) {
		setCompetitionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AwardsRecord value5(Integer value) {
		setTeamId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AwardsRecord value6(Integer value) {
		setAwardeeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AwardsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IAwards from) {
		setId(from.getId());
		setTypeId(from.getTypeId());
		setEventId(from.getEventId());
		setCompetitionId(from.getCompetitionId());
		setTeamId(from.getTeamId());
		setAwardeeId(from.getAwardeeId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IAwards> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AwardsRecord
	 */
	public AwardsRecord() {
		super(Awards.AWARDS);
	}

	/**
	 * Create a detached, initialised AwardsRecord
	 */
	public AwardsRecord(Integer id, Integer typeId, Integer eventId, Integer competitionId, Integer teamId, Integer awardeeId) {
		super(Awards.AWARDS);

		setValue(0, id);
		setValue(1, typeId);
		setValue(2, eventId);
		setValue(3, competitionId);
		setValue(4, teamId);
		setValue(5, awardeeId);
	}
}
