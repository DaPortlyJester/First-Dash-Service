/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.jooq.First;
import org.technojays.jooq.Keys;
import org.technojays.jooq.tables.records.ProgramsRecord;


/**
 * A program is a sub-organization of FIRST that describes the type of games 
 * that will be played and the 
 * types of participants.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Programs extends TableImpl<ProgramsRecord> {

	private static final long serialVersionUID = -81782736;

	/**
	 * The reference instance of <code>first.programs</code>
	 */
	public static final Programs PROGRAMS = new Programs();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProgramsRecord> getRecordType() {
		return ProgramsRecord.class;
	}

	/**
	 * The column <code>first.programs.id</code>. system id for this program
	 */
	public final TableField<ProgramsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this program");

	/**
	 * The column <code>first.programs.name</code>. Display name for this program
	 */
	public final TableField<ProgramsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "Display name for this program");

	/**
	 * The column <code>first.programs.short_name</code>. symbolic / abbreviate name used in program searches
	 */
	public final TableField<ProgramsRecord, String[]> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "symbolic / abbreviate name used in program searches");

	/**
	 * The column <code>first.programs.membership</code>. Student body participation in this program
	 */
	public final TableField<ProgramsRecord, String[]> MEMBERSHIP = createField("membership", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "Student body participation in this program");

	/**
	 * The column <code>first.programs.info</code>. Info for this program
	 */
	public final TableField<ProgramsRecord, Object> INFO = createField("info", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "Info for this program");

	/**
	 * Create a <code>first.programs</code> table reference
	 */
	public Programs() {
		this("programs", null);
	}

	/**
	 * Create an aliased <code>first.programs</code> table reference
	 */
	public Programs(String alias) {
		this(alias, PROGRAMS);
	}

	private Programs(String alias, Table<ProgramsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Programs(String alias, Table<ProgramsRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "A program is a sub-organization of FIRST that describes the type of games that will be played and the \ntypes of participants.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ProgramsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PROGRAMS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProgramsRecord> getPrimaryKey() {
		return Keys.PROGRAMS_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProgramsRecord>> getKeys() {
		return Arrays.<UniqueKey<ProgramsRecord>>asList(Keys.PROGRAMS_PK, Keys.PROGRAM_SHORT_NAME_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Programs as(String alias) {
		return new Programs(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Programs rename(String name) {
		return new Programs(name, null);
	}
}
