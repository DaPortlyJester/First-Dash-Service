/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.technojays.jooq.tables.Matches;
import org.technojays.jooq.tables.interfaces.IMatches;


/**
 * Describe a match where teams competed against each other
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "matches", schema = "first", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"competition_id", "match_number"})
})
public class MatchesRecord extends UpdatableRecordImpl<MatchesRecord> implements Record5<Integer, Integer, Integer, Timestamp, Timestamp>, IMatches {

	private static final long serialVersionUID = 1472348758;

	/**
	 * Setter for <code>first.matches.id</code>. system id for this match
	 */
	@Override
	public MatchesRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>first.matches.id</code>. system id for this match
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>first.matches.match_number</code>. match number for the competition
	 */
	@Override
	public MatchesRecord setMatchNumber(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>first.matches.match_number</code>. match number for the competition
	 */
	@Column(name = "match_number", precision = 32)
	@Override
	public Integer getMatchNumber() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>first.matches.competition_id</code>. competition system id
	 */
	@Override
	public MatchesRecord setCompetitionId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>first.matches.competition_id</code>. competition system id
	 */
	@Column(name = "competition_id", precision = 32)
	@Override
	public Integer getCompetitionId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>first.matches.start_time</code>.  expected match start time
	 */
	@Override
	public MatchesRecord setStartTime(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>first.matches.start_time</code>.  expected match start time
	 */
	@Column(name = "start_time")
	@Override
	public Timestamp getStartTime() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>first.matches.end_time</code>. expected match end time
	 */
	@Override
	public MatchesRecord setEndTime(Timestamp value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>first.matches.end_time</code>. expected match end time
	 */
	@Column(name = "end_time")
	@Override
	public Timestamp getEndTime() {
		return (Timestamp) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Timestamp, Timestamp> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Timestamp, Timestamp> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Matches.MATCHES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Matches.MATCHES.MATCH_NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Matches.MATCHES.COMPETITION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Matches.MATCHES.START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return Matches.MATCHES.END_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getMatchNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getCompetitionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getEndTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchesRecord value2(Integer value) {
		setMatchNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchesRecord value3(Integer value) {
		setCompetitionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchesRecord value4(Timestamp value) {
		setStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchesRecord value5(Timestamp value) {
		setEndTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchesRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4, Timestamp value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMatches from) {
		setId(from.getId());
		setMatchNumber(from.getMatchNumber());
		setCompetitionId(from.getCompetitionId());
		setStartTime(from.getStartTime());
		setEndTime(from.getEndTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMatches> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MatchesRecord
	 */
	public MatchesRecord() {
		super(Matches.MATCHES);
	}

	/**
	 * Create a detached, initialised MatchesRecord
	 */
	public MatchesRecord(Integer id, Integer matchNumber, Integer competitionId, Timestamp startTime, Timestamp endTime) {
		super(Matches.MATCHES);

		setValue(0, id);
		setValue(1, matchNumber);
		setValue(2, competitionId);
		setValue(3, startTime);
		setValue(4, endTime);
	}
}
