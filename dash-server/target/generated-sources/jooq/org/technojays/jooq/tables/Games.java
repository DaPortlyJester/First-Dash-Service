/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.jooq.First;
import org.technojays.jooq.Keys;
import org.technojays.jooq.tables.records.GamesRecord;


/**
 * A game describes a specific set of rules and competitions for a program 
 * and its teams. It has a period of time 
 * associated with it.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Games extends TableImpl<GamesRecord> {

	private static final long serialVersionUID = -729334254;

	/**
	 * The reference instance of <code>first.games</code>
	 */
	public static final Games GAMES = new Games();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GamesRecord> getRecordType() {
		return GamesRecord.class;
	}

	/**
	 * The column <code>first.games.id</code>.
	 */
	public final TableField<GamesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>first.games.name</code>.
	 */
	public final TableField<GamesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>first.games.short_name</code>.
	 */
	public final TableField<GamesRecord, String[]> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

	/**
	 * The column <code>first.games.program_id</code>. system id of associated program
	 */
	public final TableField<GamesRecord, Integer> PROGRAM_ID = createField("program_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id of associated program");

	/**
	 * The column <code>first.games.start_date</code>. Game start date
	 */
	public final TableField<GamesRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Game start date");

	/**
	 * The column <code>first.games.end_date</code>. end date of season
	 */
	public final TableField<GamesRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "end date of season");

	/**
	 * Create a <code>first.games</code> table reference
	 */
	public Games() {
		this("games", null);
	}

	/**
	 * Create an aliased <code>first.games</code> table reference
	 */
	public Games(String alias) {
		this(alias, GAMES);
	}

	private Games(String alias, Table<GamesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Games(String alias, Table<GamesRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "A game describes a specific set of rules and competitions for a program and its teams. It has a period of time \nassociated with it.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<GamesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_GAMES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<GamesRecord> getPrimaryKey() {
		return Keys.GAMES_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<GamesRecord>> getKeys() {
		return Arrays.<UniqueKey<GamesRecord>>asList(Keys.GAMES_PK, Keys.GAMES_SHORT_NAME_UNIQUES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Games as(String alias) {
		return new Games(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Games rename(String name) {
		return new Games(name, null);
	}
}
