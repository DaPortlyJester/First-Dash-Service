/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.jooq.First;
import org.technojays.jooq.Keys;
import org.technojays.jooq.tables.records.MatchScoresRecord;


/**
 * Scores associated with a match
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchScores extends TableImpl<MatchScoresRecord> {

	private static final long serialVersionUID = -915561747;

	/**
	 * The reference instance of <code>first.match_scores</code>
	 */
	public static final MatchScores MATCH_SCORES = new MatchScores();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MatchScoresRecord> getRecordType() {
		return MatchScoresRecord.class;
	}

	/**
	 * The column <code>first.match_scores.id</code>. system id for this match
	 */
	public final TableField<MatchScoresRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this match");

	/**
	 * The column <code>first.match_scores.match_id</code>. system id of the associated match
	 */
	public final TableField<MatchScoresRecord, Integer> MATCH_ID = createField("match_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id of the associated match");

	/**
	 * The column <code>first.match_scores.alliance_id</code>. system id of the associated alliance
	 */
	public final TableField<MatchScoresRecord, Integer> ALLIANCE_ID = createField("alliance_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id of the associated alliance");

	/**
	 * The column <code>first.match_scores.score_type_id</code>. system id of the score type
	 */
	public final TableField<MatchScoresRecord, Integer> SCORE_TYPE_ID = createField("score_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id of the score type");

	/**
	 * The column <code>first.match_scores.value</code>. score value
	 */
	public final TableField<MatchScoresRecord, String[]> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "score value");

	/**
	 * Create a <code>first.match_scores</code> table reference
	 */
	public MatchScores() {
		this("match_scores", null);
	}

	/**
	 * Create an aliased <code>first.match_scores</code> table reference
	 */
	public MatchScores(String alias) {
		this(alias, MATCH_SCORES);
	}

	private MatchScores(String alias, Table<MatchScoresRecord> aliased) {
		this(alias, aliased, null);
	}

	private MatchScores(String alias, Table<MatchScoresRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Scores associated with a match");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MatchScoresRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MATCH_SCORES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MatchScoresRecord> getPrimaryKey() {
		return Keys.MATCH_SCORES_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MatchScoresRecord>> getKeys() {
		return Arrays.<UniqueKey<MatchScoresRecord>>asList(Keys.MATCH_SCORES_PK, Keys.MATCH_SCORE_UNIQUENESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchScores as(String alias) {
		return new MatchScores(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MatchScores rename(String name) {
		return new MatchScores(name, null);
	}
}
