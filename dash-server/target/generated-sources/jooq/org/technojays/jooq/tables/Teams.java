/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.jooq.First;
import org.technojays.jooq.Keys;
import org.technojays.jooq.tables.records.TeamsRecord;


/**
 * A team associated with a specific FIRST program
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Teams extends TableImpl<TeamsRecord> {

	private static final long serialVersionUID = 258526741;

	/**
	 * The reference instance of <code>first.teams</code>
	 */
	public static final Teams TEAMS = new Teams();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TeamsRecord> getRecordType() {
		return TeamsRecord.class;
	}

	/**
	 * The column <code>first.teams.id</code>. system id forteam
	 */
	public final TableField<TeamsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id forteam");

	/**
	 * The column <code>first.teams.program_id</code>. system id for the associated program
	 */
	public final TableField<TeamsRecord, Integer> PROGRAM_ID = createField("program_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the associated program");

	/**
	 * The column <code>first.teams.number</code>. number for this team
	 */
	public final TableField<TeamsRecord, Integer> NUMBER = createField("number", org.jooq.impl.SQLDataType.INTEGER, this, "number for this team");

	/**
	 * The column <code>first.teams.name</code>.  name for this team
	 */
	public final TableField<TeamsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, " name for this team");

	/**
	 * The column <code>first.teams.short_name</code>. short name for this team
	 */
	public final TableField<TeamsRecord, String[]> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "short name for this team");

	/**
	 * Create a <code>first.teams</code> table reference
	 */
	public Teams() {
		this("teams", null);
	}

	/**
	 * Create an aliased <code>first.teams</code> table reference
	 */
	public Teams(String alias) {
		this(alias, TEAMS);
	}

	private Teams(String alias, Table<TeamsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Teams(String alias, Table<TeamsRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "A team associated with a specific FIRST program");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TeamsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEAMS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TeamsRecord> getPrimaryKey() {
		return Keys.TEAMS_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TeamsRecord>> getKeys() {
		return Arrays.<UniqueKey<TeamsRecord>>asList(Keys.TEAMS_PK, Keys.TEAMS_SN_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Teams as(String alias) {
		return new Teams(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Teams rename(String name) {
		return new Teams(name, null);
	}
}
