/**
 * This class is generated by jOOQ
 */
package org.technojays.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.jooq.First;
import org.technojays.jooq.Keys;
import org.technojays.jooq.tables.records.AllianceTypesRecord;


/**
 * Alliance types for FIRST programs
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllianceTypes extends TableImpl<AllianceTypesRecord> {

	private static final long serialVersionUID = -221235068;

	/**
	 * The reference instance of <code>first.alliance_types</code>
	 */
	public static final AllianceTypes ALLIANCE_TYPES = new AllianceTypes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AllianceTypesRecord> getRecordType() {
		return AllianceTypesRecord.class;
	}

	/**
	 * The column <code>first.alliance_types.id</code>. System id for alliance type
	 */
	public final TableField<AllianceTypesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "System id for alliance type");

	/**
	 * The column <code>first.alliance_types.name</code>. Name for alliance type
	 */
	public final TableField<AllianceTypesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "Name for alliance type");

	/**
	 * The column <code>first.alliance_types.short_name</code>. Short Name for alliance type
	 */
	public final TableField<AllianceTypesRecord, String[]> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "Short Name for alliance type");

	/**
	 * Create a <code>first.alliance_types</code> table reference
	 */
	public AllianceTypes() {
		this("alliance_types", null);
	}

	/**
	 * Create an aliased <code>first.alliance_types</code> table reference
	 */
	public AllianceTypes(String alias) {
		this(alias, ALLIANCE_TYPES);
	}

	private AllianceTypes(String alias, Table<AllianceTypesRecord> aliased) {
		this(alias, aliased, null);
	}

	private AllianceTypes(String alias, Table<AllianceTypesRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Alliance types for FIRST programs");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AllianceTypesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ALLIANCE_TYPES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AllianceTypesRecord> getPrimaryKey() {
		return Keys.ALLIANCE_TYPE_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AllianceTypesRecord>> getKeys() {
		return Arrays.<UniqueKey<AllianceTypesRecord>>asList(Keys.ALLIANCE_TYPE_PK, Keys.ALLIANCE_TYPE_SN_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllianceTypes as(String alias) {
		return new AllianceTypes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllianceTypes rename(String name) {
		return new AllianceTypes(name, null);
	}
}
