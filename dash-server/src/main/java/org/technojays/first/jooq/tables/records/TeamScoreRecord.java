/**
 * This class is generated by jOOQ
 */
package org.technojays.first.jooq.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.technojays.first.jooq.tables.TeamScore;
import org.technojays.first.jooq.tables.interfaces.ITeamScore;


/**
 * Scores associated with a FIRST team during a match at a competition
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "team_score", schema = "first", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"team_id", "match_id", "score_type_id"})
})
public class TeamScoreRecord extends UpdatableRecordImpl<TeamScoreRecord> implements Record5<Integer, Integer, Integer, Integer, String[]>, ITeamScore {

	private static final long serialVersionUID = 572320072;

	/**
	 * Setter for <code>first.team_score.id</code>. system id for this score
	 */
	@Override
	public TeamScoreRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>first.team_score.id</code>. system id for this score
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>first.team_score.team_id</code>. system id for the associated team
	 */
	@Override
	public TeamScoreRecord setTeamId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>first.team_score.team_id</code>. system id for the associated team
	 */
	@Column(name = "team_id", precision = 32)
	@Override
	public Integer getTeamId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>first.team_score.match_id</code>. system id for the associated match
	 */
	@Override
	public TeamScoreRecord setMatchId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>first.team_score.match_id</code>. system id for the associated match
	 */
	@Column(name = "match_id", precision = 32)
	@Override
	public Integer getMatchId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>first.team_score.score_type_id</code>. system id for the associated score type
	 */
	@Override
	public TeamScoreRecord setScoreTypeId(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>first.team_score.score_type_id</code>. system id for the associated score type
	 */
	@Column(name = "score_type_id", precision = 32)
	@Override
	public Integer getScoreTypeId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>first.team_score.value</code>. score value
	 */
	@Override
	public TeamScoreRecord setValue(String[] value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>first.team_score.value</code>. score value
	 */
	@Column(name = "value")
	@Override
	public String[] getValue() {
		return (String[]) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Integer, String[]> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Integer, String[]> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return TeamScore.TEAM_SCORE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return TeamScore.TEAM_SCORE.TEAM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return TeamScore.TEAM_SCORE.MATCH_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return TeamScore.TEAM_SCORE.SCORE_TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String[]> field5() {
		return TeamScore.TEAM_SCORE.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTeamId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getMatchId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getScoreTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String[] value5() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamScoreRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamScoreRecord value2(Integer value) {
		setTeamId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamScoreRecord value3(Integer value) {
		setMatchId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamScoreRecord value4(Integer value) {
		setScoreTypeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamScoreRecord value5(String[] value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamScoreRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String[] value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITeamScore from) {
		setId(from.getId());
		setTeamId(from.getTeamId());
		setMatchId(from.getMatchId());
		setScoreTypeId(from.getScoreTypeId());
		setValue(from.getValue());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITeamScore> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TeamScoreRecord
	 */
	public TeamScoreRecord() {
		super(TeamScore.TEAM_SCORE);
	}

	/**
	 * Create a detached, initialised TeamScoreRecord
	 */
	public TeamScoreRecord(Integer id, Integer teamId, Integer matchId, Integer scoreTypeId, String[] value) {
		super(TeamScore.TEAM_SCORE);

		setValue(0, id);
		setValue(1, teamId);
		setValue(2, matchId);
		setValue(3, scoreTypeId);
		setValue(4, value);
	}
}
