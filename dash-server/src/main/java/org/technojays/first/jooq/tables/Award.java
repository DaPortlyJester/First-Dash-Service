/**
 * This class is generated by jOOQ
 */
package org.technojays.first.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.first.jooq.First;
import org.technojays.first.jooq.Keys;
import org.technojays.first.jooq.tables.records.AwardRecord;


/**
 * Awards awarded at competitions and events
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Award extends TableImpl<AwardRecord> {

	private static final long serialVersionUID = -1685324358;

	/**
	 * The reference instance of <code>first.award</code>
	 */
	public static final Award AWARD = new Award();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AwardRecord> getRecordType() {
		return AwardRecord.class;
	}

	/**
	 * The column <code>first.award.id</code>. system id for this award
	 */
	public final TableField<AwardRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this award");

	/**
	 * The column <code>first.award.type_id</code>. system id for the type of this award
	 */
	public final TableField<AwardRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the type of this award");

	/**
	 * The column <code>first.award.event_id</code>. system id for the associated event
	 */
	public final TableField<AwardRecord, Integer> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the associated event");

	/**
	 * The column <code>first.award.competition_id</code>. system id for the competition this award is assocaited with
	 */
	public final TableField<AwardRecord, Integer> COMPETITION_ID = createField("competition_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the competition this award is assocaited with");

	/**
	 * The column <code>first.award.team_id</code>. system id for the team this award is associated with
	 */
	public final TableField<AwardRecord, Integer> TEAM_ID = createField("team_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the team this award is associated with");

	/**
	 * The column <code>first.award.awardee_id</code>. system id for the awardee of this award
	 */
	public final TableField<AwardRecord, Integer> AWARDEE_ID = createField("awardee_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the awardee of this award");

	/**
	 * Create a <code>first.award</code> table reference
	 */
	public Award() {
		this("award", null);
	}

	/**
	 * Create an aliased <code>first.award</code> table reference
	 */
	public Award(String alias) {
		this(alias, AWARD);
	}

	private Award(String alias, Table<AwardRecord> aliased) {
		this(alias, aliased, null);
	}

	private Award(String alias, Table<AwardRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Awards awarded at competitions and events");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AwardRecord, Integer> getIdentity() {
		return Keys.IDENTITY_AWARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AwardRecord> getPrimaryKey() {
		return Keys.AWARDS_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AwardRecord>> getKeys() {
		return Arrays.<UniqueKey<AwardRecord>>asList(Keys.AWARDS_PK, Keys.AWARDS_UNIQUENESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Award as(String alias) {
		return new Award(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Award rename(String name) {
		return new Award(name, null);
	}
}
