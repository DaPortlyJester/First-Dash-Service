/**
 * This class is generated by jOOQ
 */
package org.technojays.first.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.first.jooq.First;
import org.technojays.first.jooq.Keys;
import org.technojays.first.jooq.tables.records.SponsorRecord;


/**
 * Sponsors for teams, events, groups, programs, etc
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sponsor extends TableImpl<SponsorRecord> {

	private static final long serialVersionUID = 742809375;

	/**
	 * The reference instance of <code>first.sponsor</code>
	 */
	public static final Sponsor SPONSOR = new Sponsor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SponsorRecord> getRecordType() {
		return SponsorRecord.class;
	}

	/**
	 * The column <code>first.sponsor.id</code>. system id for this sponsor
	 */
	public final TableField<SponsorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this sponsor");

	/**
	 * The column <code>first.sponsor.info</code>. sponsor information
	 */
	public final TableField<SponsorRecord, Object> INFO = createField("info", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "sponsor information");

	/**
	 * Create a <code>first.sponsor</code> table reference
	 */
	public Sponsor() {
		this("sponsor", null);
	}

	/**
	 * Create an aliased <code>first.sponsor</code> table reference
	 */
	public Sponsor(String alias) {
		this(alias, SPONSOR);
	}

	private Sponsor(String alias, Table<SponsorRecord> aliased) {
		this(alias, aliased, null);
	}

	private Sponsor(String alias, Table<SponsorRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Sponsors for teams, events, groups, programs, etc\n");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SponsorRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SPONSOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SponsorRecord> getPrimaryKey() {
		return Keys.SPONSORS_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SponsorRecord>> getKeys() {
		return Arrays.<UniqueKey<SponsorRecord>>asList(Keys.SPONSORS_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Sponsor as(String alias) {
		return new Sponsor(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Sponsor rename(String name) {
		return new Sponsor(name, null);
	}
}
