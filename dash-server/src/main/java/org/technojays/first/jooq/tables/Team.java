/**
 * This class is generated by jOOQ
 */
package org.technojays.first.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.first.jooq.First;
import org.technojays.first.jooq.Keys;
import org.technojays.first.jooq.tables.records.TeamRecord;


/**
 * A team associated with a specific FIRST program
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Team extends TableImpl<TeamRecord> {

	private static final long serialVersionUID = -2080678949;

	/**
	 * The reference instance of <code>first.team</code>
	 */
	public static final Team TEAM = new Team();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TeamRecord> getRecordType() {
		return TeamRecord.class;
	}

	/**
	 * The column <code>first.team.id</code>. system id forteam
	 */
	public final TableField<TeamRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id forteam");

	/**
	 * The column <code>first.team.program_id</code>. system id for the associated program
	 */
	public final TableField<TeamRecord, Integer> PROGRAM_ID = createField("program_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the associated program");

	/**
	 * The column <code>first.team.number</code>. number for this team
	 */
	public final TableField<TeamRecord, Integer> NUMBER = createField("number", org.jooq.impl.SQLDataType.INTEGER, this, "number for this team");

	/**
	 * The column <code>first.team.name</code>.  name for this team
	 */
	public final TableField<TeamRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, " name for this team");

	/**
	 * The column <code>first.team.short_name</code>. short name for this team
	 */
	public final TableField<TeamRecord, String[]> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "short name for this team");

	/**
	 * Create a <code>first.team</code> table reference
	 */
	public Team() {
		this("team", null);
	}

	/**
	 * Create an aliased <code>first.team</code> table reference
	 */
	public Team(String alias) {
		this(alias, TEAM);
	}

	private Team(String alias, Table<TeamRecord> aliased) {
		this(alias, aliased, null);
	}

	private Team(String alias, Table<TeamRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "A team associated with a specific FIRST program");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TeamRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEAM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TeamRecord> getPrimaryKey() {
		return Keys.TEAMS_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TeamRecord>> getKeys() {
		return Arrays.<UniqueKey<TeamRecord>>asList(Keys.TEAMS_PK, Keys.TEAMS_SN_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Team as(String alias) {
		return new Team(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Team rename(String name) {
		return new Team(name, null);
	}
}
