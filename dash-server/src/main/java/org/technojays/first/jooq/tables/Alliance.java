/**
 * This class is generated by jOOQ
 */
package org.technojays.first.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.first.jooq.First;
import org.technojays.first.jooq.Keys;
import org.technojays.first.jooq.tables.records.AllianceRecord;


/**
 * Relationship between a match and a group of allies
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Alliance extends TableImpl<AllianceRecord> {

	private static final long serialVersionUID = 1039375133;

	/**
	 * The reference instance of <code>first.alliance</code>
	 */
	public static final Alliance ALLIANCE = new Alliance();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AllianceRecord> getRecordType() {
		return AllianceRecord.class;
	}

	/**
	 * The column <code>first.alliance.id</code>. system id for this alliance
	 */
	public final TableField<AllianceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this alliance");

	/**
	 * The column <code>first.alliance.type</code>. type (color) for this alliance
	 */
	public final TableField<AllianceRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "type (color) for this alliance");

	/**
	 * The column <code>first.alliance.match_id</code>. system id for the associated match
	 */
	public final TableField<AllianceRecord, Integer> MATCH_ID = createField("match_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id for the associated match");

	/**
	 * The column <code>first.alliance.ally_ref</code>. ally->alliance reference for all teams that were a part of this alliance (sha from team numbers)
	 */
	public final TableField<AllianceRecord, String> ALLY_REF = createField("ally_ref", org.jooq.impl.SQLDataType.CLOB, this, "ally->alliance reference for all teams that were a part of this alliance (sha from team numbers)");

	/**
	 * Create a <code>first.alliance</code> table reference
	 */
	public Alliance() {
		this("alliance", null);
	}

	/**
	 * Create an aliased <code>first.alliance</code> table reference
	 */
	public Alliance(String alias) {
		this(alias, ALLIANCE);
	}

	private Alliance(String alias, Table<AllianceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Alliance(String alias, Table<AllianceRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Relationship between a match and a group of allies");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AllianceRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ALLIANCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AllianceRecord> getPrimaryKey() {
		return Keys.ALLIANCE_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AllianceRecord>> getKeys() {
		return Arrays.<UniqueKey<AllianceRecord>>asList(Keys.ALLIANCE_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AllianceRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AllianceRecord, ?>>asList(Keys.ALLIANCE__ALLIANCES_TYPE_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Alliance as(String alias) {
		return new Alliance(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Alliance rename(String name) {
		return new Alliance(name, null);
	}
}
