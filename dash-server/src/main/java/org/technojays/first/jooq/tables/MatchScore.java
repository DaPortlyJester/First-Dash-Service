/**
 * This class is generated by jOOQ
 */
package org.technojays.first.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.technojays.first.jooq.First;
import org.technojays.first.jooq.Keys;
import org.technojays.first.jooq.tables.records.MatchScoreRecord;


/**
 * Scores associated with a match
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchScore extends TableImpl<MatchScoreRecord> {

	private static final long serialVersionUID = -1563714097;

	/**
	 * The reference instance of <code>first.match_score</code>
	 */
	public static final MatchScore MATCH_SCORE = new MatchScore();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MatchScoreRecord> getRecordType() {
		return MatchScoreRecord.class;
	}

	/**
	 * The column <code>first.match_score.id</code>. system id for this match
	 */
	public final TableField<MatchScoreRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "system id for this match");

	/**
	 * The column <code>first.match_score.match_id</code>. system id of the associated match
	 */
	public final TableField<MatchScoreRecord, Integer> MATCH_ID = createField("match_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id of the associated match");

	/**
	 * The column <code>first.match_score.alliance_id</code>. system id of the associated alliance
	 */
	public final TableField<MatchScoreRecord, Integer> ALLIANCE_ID = createField("alliance_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id of the associated alliance");

	/**
	 * The column <code>first.match_score.score_type_id</code>. system id of the score type
	 */
	public final TableField<MatchScoreRecord, Integer> SCORE_TYPE_ID = createField("score_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "system id of the score type");

	/**
	 * The column <code>first.match_score.value</code>. score value
	 */
	public final TableField<MatchScoreRecord, String[]> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "score value");

	/**
	 * Create a <code>first.match_score</code> table reference
	 */
	public MatchScore() {
		this("match_score", null);
	}

	/**
	 * Create an aliased <code>first.match_score</code> table reference
	 */
	public MatchScore(String alias) {
		this(alias, MATCH_SCORE);
	}

	private MatchScore(String alias, Table<MatchScoreRecord> aliased) {
		this(alias, aliased, null);
	}

	private MatchScore(String alias, Table<MatchScoreRecord> aliased, Field<?>[] parameters) {
		super(alias, First.FIRST, aliased, parameters, "Scores associated with a match");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MatchScoreRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MATCH_SCORE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MatchScoreRecord> getPrimaryKey() {
		return Keys.MATCH_SCORES_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MatchScoreRecord>> getKeys() {
		return Arrays.<UniqueKey<MatchScoreRecord>>asList(Keys.MATCH_SCORES_PK, Keys.MATCH_SCORE_UNIQUENESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MatchScore as(String alias) {
		return new MatchScore(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MatchScore rename(String name) {
		return new MatchScore(name, null);
	}
}
